目前我有个后端应用和一个基于vue3的前台前端和基于vue3的后台前端想要部署在阿里云服务器上，目前部署完成了，但是我访问http://47.110.54.22/显示无法访问，我会给你提供一些目前的配置信息，请你分析问题，nginx配置：```server {
        listen 80;
        server_name 47.110.54.22;



        location / {
                root /home/project/ai_jgpy/client/dist;
                index index.html;
                try_files $uri $uri/ /index.html;
        }
        location /api {
                proxy_pass http://localhost:8080;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
}

server {
        listen 2468;
        server_name localhost;

        location / {
                root /home/project/ai_jgpy/backstage/dist;
                index index.html;
                try_files $uri $uri/ /index.html;
        }

        location /api {
                proxy_pass http://localhost:8080;
                proxy_set_header Host $host;
        }
}```，前台vue3前端的配置文件vite.config.ts：```import { fileURLToPath, URL } from 'node:url'

import { defineConfig } from 'vite'
import vue from '@vitejs/plugin-vue'

// 配置vite
// https://vite.dev/config/
export default defineConfig({
  plugins: [vue()],
  resolve: {
    alias: {
      '@': fileURLToPath(new URL('./src', import.meta.url)),
    },
  },
  server: {
    port: 3579,
    proxy: {
      '/api': {
        target: process.env.VITE_API_BASE_URL || 'http://localhost:8080',
        changeOrigin: true,
        rewrite: (path) => path.replace(/^\/api/, '')
      }
    }
  },
  build: {
    // 生产环境构建配置
    outDir: 'dist',
    assetsDir: 'assets',
    // 生产环境移除 console
    minify: 'terser',
    terserOptions: {
      compress: {
        drop_console: true,
        drop_debugger: true
      }
    }
  }
})```
后台vue3前端的配置文件：```import { fileURLToPath, URL } from 'node:url'

import { defineConfig } from 'vite'
import vue from '@vitejs/plugin-vue'
import vueJsx from '@vitejs/plugin-vue-jsx'
import vueDevTools from 'vite-plugin-vue-devtools'
// 这一行setup配置
import vueSetupExtend from 'vite-plugin-vue-setup-extend'

// 配置vite
// https://vite.dev/config/
export default defineConfig({
  // 还有这里
  plugins: [vue(), vueJsx(), vueDevTools(), vueSetupExtend()],
  resolve: {
    alias: {
      '@': fileURLToPath(new URL('./src', import.meta.url)),
    },
  },
  server: {
    port: 2468,
    proxy: {
      '/api': {
        target: 'http://localhost:8080',
        changeOrigin: true,
      },
    },
  },
  build: {
    outDir: 'dist',
    assetsDir: 'assets',
    // 生产环境移除 console
    minify: 'terser',
    terserOptions: {
      compress: {
        drop_console: true,
        drop_debugger: true,
      },
    },
    // 构建后是否生成 source map 文件
    sourcemap: false,
    // 启用/禁用 CSS 代码拆分
    cssCodeSplit: true,
    // 构建后是否生成 gzip 压缩文件
    rollupOptions: {
      output: {
        manualChunks: {
          'vue-vendor': ['vue', 'vue-router', 'pinia'],
          'element-plus': ['element-plus'],
        },
      },
    },
  },
})```，后端进程守护配置文件：```[Unit]
Description=Robyn Backend Service
After=network.target

[Service]
User=root
WorkingDirectory=/home/project/ai_jgpy/server
Environment="PATH=/envs/jgpy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
ExecStart=/envs/jgpy/bin/python main.py --host=0.0.0.0 --port=8080 --processes=4 --workers=4
Restart=always

[Install]
WantedBy=multi-user.target
```，后端settings.py文件：```import os
from pathlib import Path
from robyn.templating import JinjaTemplate
from robyn import Robyn, ALLOW_CORS

"""
配置环境
"""
# 获取当前文件路径
BASE_DIR = os.path.dirname(os.path.abspath(__file__))

# def serve_static_files(app):
#     """配置静态资源在哪个目录"""
#     app.serve_directory(
#         route="/static",  # 访问路由前缀
#         directory_path=os.path.join(BASE_DIR, "static"),  # 静态文件目录的绝对路径
#         index_file=None  # 不需要指定索引文件
#     )

# # 创建模板实例
# template = JinjaTemplate(directory=os.path.join(BASE_DIR, "templates"))

# def render_template(template_name, **kwargs):
#     """全局配置render_template"""
#     return template.render_template(template_name, **kwargs)

def configure_cors(app: Robyn):
    """配置CORS"""
    ALLOW_CORS(app, origins=[
        "http://localhost:8080/",
        "http://127.0.0.1:8080/",
        "http://localhost:4455/",
        "http://127.0.0.1:4455/",
        "http://localhost:2468/",
        "http://127.0.0.1:2468/",
        "http://localhost:3579/",
        "http://127.0.0.1:3579/",
        "http://localhost:5173/",
        "http://127.0.0.1:5173/",
        "http://localhost:5173",
        "http://127.0.0.1:5173",
        "http://localhost:5174/",
        "http://127.0.0.1:5174/",
        "http://localhost:5174",
        "http://127.0.0.1:5174",
        "http://localhost:3000/",
        "http://127.0.0.1:3000/",
        "http://test.com/"  # 去掉末尾斜杠
    ])

```，root@iZbp16z0hs359c2fvxbl22Z:/home/project/ai_jgpy/backstage# sudo systemctl status nginx
● nginx.service - A high performance web server and a reverse proxy server
     Loaded: loaded (/usr/lib/systemd/system/nginx.service; enabled; preset: enabled)
     Active: active (running) since Sun 2025-04-27 21:23:43 CST; 8min ago
       Docs: man:nginx(8)
    Process: 200482 ExecStartPre=/usr/sbin/nginx -t -q -g daemon on; master_process on; (code=exited, status=0/SUCCESS)
    Process: 200485 ExecStart=/usr/sbin/nginx -g daemon on; master_process on; (code=exited, status=0/SUCCESS)
   Main PID: 200486 (nginx)
      Tasks: 9 (limit: 18009)
     Memory: 6.5M (peak: 7.4M)
        CPU: 15ms
     CGroup: /system.slice/nginx.service
             ├─200486 "nginx: master process /usr/sbin/nginx -g daemon on; master_process on;"
             ├─200487 "nginx: worker process"
             ├─200488 "nginx: worker process"
             ├─200489 "nginx: worker process"
             ├─200490 "nginx: worker process"
             ├─200492 "nginx: worker process"
             ├─200493 "nginx: worker process"
             ├─200494 "nginx: worker process"
             └─200495 "nginx: worker process"
root@iZbp16z0hs359c2fvxbl22Z:/home/project/ai_jgpy/backstage# sudo nginx -t
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful
root@iZbp16z0hs359c2fvxbl22Z:/home/project/ai_jgpy/backstage# sudo netstat -tulnp | grep ':80'
tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      200486/nginx: maste 
tcp        0      0 0.0.0.0:8080            0.0.0.0:*               LISTEN      174515/python       
tcp6       0      0 :::80                   :::*                    LISTEN      200486/nginx: maste 
root@iZbp16z0hs359c2fvxbl22Z:/home/project/ai_jgpy/backstage# ls -l /home/project/ai_jgpy/client/dist/index.html
-rw-r--r-- 1 www-data www-data 445 Apr 27 21:23 /home/project/ai_jgpy/client/dist/index.html
root@iZbp16z0hs359c2fvxbl22Z:/home/project/ai_jgpy/backstage# ls -l /home/project/ai_jgpy/backstage/dist/index.html
-rw-r--r-- 1 www-data www-data 592 Apr 27 21:22 /home/project/ai_jgpy/backstage/dist/index.html
root@iZbp16z0hs359c2fvxbl22Z:/home/project/ai_jgpy/backstage# sudo chown -R www-data:www-data /home/project/ai_jgpy/client/dist
root@iZbp16z0hs359c2fvxbl22Z:/home/project/ai_jgpy/backstage# sudo chown -R www-data:www-data /home/project/ai_jgpy/backstage/dist
root@iZbp16z0hs359c2fvxbl22Z:/home/project/ai_jgpy/backstage# curl http://localhost:8080/api/health
Not foundroot@iZbp16z0hs359c2fvxbl22Z:/home/project/ai_jgpy/backstage# curl http://localhost
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
html { color-scheme: light dark; }
body { width: 35em; margin: 0 auto;
font-family: Tahoma, Verdana, Arial, sans-serif; }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>
root@iZbp16z0hs359c2fvxbl22Z:/home/project/ai_jgpy/backstage# curl http://localhost:2468
<!DOCTYPE html>
<html lang="">
  <head>
    <meta charset="UTF-8">
    <link rel="icon" href="/favicon.ico">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vite App</title>
    <script type="module" crossorigin src="/assets/index-BftSiZ1R.js"></script>
    <link rel="modulepreload" crossorigin href="/assets/vue-vendor-B0tYOcBV.js">
    <link rel="modulepreload" crossorigin href="/assets/element-plus-4dk9whhS.js">
    <link rel="stylesheet" crossorigin href="/assets/index-CDHEy4Hd.css">
  </head>
  <body>
    <div id="app"></div>
  </body>
</html>
root@iZbp16z0hs359c2fvxbl22Z:/home/project/ai_jgpy/backstage# curl http://localhost/api/health
<html>
<head><title>404 Not Found</title></head>
<body>
<center><h1>404 Not Found</h1></center>
<hr><center>nginx/1.24.0 (Ubuntu)</center>
</body>
</html>,请你分析并定位问题